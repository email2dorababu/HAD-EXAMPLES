
Primitive Writables not always suitable some usecases.
E.g. Say we need to process a 3D-points data.. the primitives writables are not sufficient.

The 3D point contains values in 3 dimensional axis

Class _3Dpoint{
public float xaxis;
public float yaxis;
public float zaxis;
}

We may need operations like - compare two points, which is near to origin,
find distance among the points etc methods.
--------------------------------------------------
This Program is to find Bigram Count (similar to word count - here it is text pair,
 Occurrence of two words ).
 This is very much used in Language Processing and Communication theory


Custom Writables are used for counting a text pair.
this is called Bigrams

Wikipedia page for Bi-Grams

Like Word count, in Bigram(Digram) we count how many combinations of words are present?

This is very much useful in LanguageModels for speech recognition, here we use this to find what is the mostlikely the next word based on the first word.

N-Grams ( here n=2) used in probability, Communicatin theory(error correction and detection) and "data compression"

3-gram sequences are combinations of 3 words.


-----------------------------------
Other places where we need custom writables are while processing 
Logs etc.
---------------------------------------------------------------------

Writable interface - just contain methods to serialize and deserialize data
public interface Writable{
void readFileds(DataInput in);
void write(DataOutput out);

}

WritableComparable need to implement additionally CompareTo method, 
with which we will compare two WritableComparable Instances.

CompareTo method is heavily used in MR sort and shuffle stages.

so make sure that this compareTo method is implemented very efficiently.


public interface WritableComparable extends Writable,Comparable{
void readFileds(DataInput in);
void write(DataOutput out);
int compareTo(WritableComparable o);

}

In addition to above methods, Default java Object class contains 

hashCode, equals and toString (no need to implement finalize and clone)
------------------------------
Our program implements Custom WritableComparable data type.
and use this datatype in the bigram count( similar to wordcount )




BIG NOTE - 

public class BigramTextPair implements WritableComparable{} will give error
in copareTo method. 
it will ask for compareTo(object o) instead of compareTo(BigramTextPair obj)

so you should inclde the below generic signature (WirtableComparable<T>)
public class BigramTextPair implements WritableComparable<BigramTextPair> 


Ref - public class BigramTextPair implements WritableComparable<BigramTextPair>

-----------------------------------

Running

hadoop fs -cat /user/LocalToHdfs/ExampleFile.txt

hadoop jar /home/ubuntu/workspace/CustomWritable.jar  /user/LocalToHdfs/ExampleFile.txt  /user/LocalToHdfs/CustomWC/

for Output give only folder name, because the MR creates _SUCCESS and part file.


hadoop jar /home/ubuntu/workspace/CustomWritable.jar  /user/LocalToHdfs/ExampleFile.txt  /user/LocalToHdfs/CustomWC/

hadoop fs -cat /user/LocalToHdfs/CustomWC/*


-------------------------
Hi this is the input file to program LocalToHdfsJavaClient API

Copy the file from local file system to HDFS using Java Client.

This is same as the CLI -copyFromLocal command

Hi this is the input file to program LocalToHdfsJavaClient API

Copy the file from local file system to HDFS using Java Client.

This is same as the CLI -copyFromLocal command
--------------------------------

-copyFromLocal command	2
Copy the	2
HDFS using	2
Hi this	2
Java Client.	2
LocalToHdfsJavaClient API	2
This is	2
file from	2
input file	2
is the	2
local file	2
same as	2
system to	2
the CLI	2
to program	2














